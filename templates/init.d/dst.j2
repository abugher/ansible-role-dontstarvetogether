#! /bin/sh
# /etc/init.d/dst-{{ dst_shard_name }}

### BEGIN INIT INFO
# Provides:          dst-{{ dst_shard_name }}
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Don't Starve Together server.
# Description:       Don't Starve Together server.
### END INIT INFO

# The user that you installed DST server as
USER="steam"
NAME="Don't Starve Together {{ dst_shard_name }} server"
SCREENREF="DST"

# Should be the same as the dedicated server's install directory
BINARYPATH="{{ dst_install_dir }}bin"
BINARYNAME="dontstarve_dedicated_server_nullrenderer"
PIDFILE="$BINARYPATH/dst-{{ dst_shard_name }}.pid"
OPTS="-conf_dir {{ dst_shard_name }}"

cd "$BINARYPATH"


running() {
  if test -e $PIDFILE; then
    read pid < $PIDFILE
    if ! ps -l $pid >/dev/null 2>&1; then
      return 2
    fi
  else
    return 1
  fi

  return 0
}


start() {
  if ! running; then
    echo -n " * Starting:  $NAME\n"
    cd $BINARYPATH
    sudo -u $USER nohup $BINARYPATH/$BINARYNAME $OPTS > /var/log/dst-{{ dst_shard_name}}.log 2>&1 &
    echo $! > $PIDFILE
    if [ -s $PIDFILE ]; then
      if ps -p $(cat $PIDFILE) >/dev/null 2>&1; then
        echo " * done"
      else
        echo " * failed"
        rm $PIDFILE
      fi
    else
      echo " * failed"
      rm $PIDFILE
    fi
  else
    echo " * The $NAME is already started."
  fi
}


stop() {
  if running; then
    echo -n " * Stopping:  $NAME\n"
    kill $(cat $PIDFILE)
    while running; do
      echo "   (still running...)"
      sleep 1
    done
    rm $PIDFILE
    echo " * done"
  else
    echo " * The $NAME is already stopped."
    if test -e $PIDFILE; then
      echo " * Removing stale PID file."
      rm $PIDFILE
    fi
  fi
}


status() {
  running
  case $? in
    0)
      echo " * The $NAME is started, with PID:  $(cat $PIDFILE)"
      ;;
    1)
      echo " * The $NAME is stopped."
      ;;
    2)
      echo " * The $NAME is stopped, but still claims PID:  $(cat $PIDFILE)"
      return 1
      ;;
    *)
      echo " * Internal error."
      return 2
      ;;
  esac
}


case "$1" in
  start)
    start
    ;;
  stop)
    stop
    ;;
  restart)
    stop
    start
    ;;
  status)
    status
    ;;
  *)
    echo "Usage: $0 (start|stop|restart|status)"
    exit 1
    ;;
esac
