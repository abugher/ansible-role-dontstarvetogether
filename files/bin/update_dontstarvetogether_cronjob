#!/bin/bash


max_attempts=3


main() {
  if servers_are_paused; then
    stop_services
    update
    start_services
  fi
}


update() {
  for i in $(seq 0 "${max_attempts}"); do
    sudo -u steam sh -c '/home/steam/cmd/steamcmd.sh +runscript /usr/local/bin/update_dontstarvetogether_steam_script > /var/log/update_dontstarvetogether.log 2>&1'
    ret="${?}"
    if test 0 = "${ret}"; then 
      break
    else
      sudo -u steam cp /var/log/update_dontstarvetogether.log /var/log/update_dontstarvetogether.failure.log
    fi
  done
  sudo -u steam sh -c "echo ${ret} > /var/log/update_dontstarvetogether.ret"
}


stop_services() {
  for service in /etc/init.d/dst-*; do
    $service stop || fail "Failed to stop service:  ${service}"
  done
}


start_services() {
  failed_services=()
  for service in /etc/init.d/dst-*; do
    if ! $service start; then
      warn "Failed to start service: ${service}"
      failed_services+=("${service}")
    fi
    if ! test 0 = "${#failed_services[@]}"; then
      fail "Failed to start services:  ${failed_services[@]}"
    fi
  done
}


fail() {
  echo -- "ERROR:  ${@}" >&2
  exit 1
}


warn() {
  echo -- "WARNING:  ${@}" >&2
}


server_is_paused() {
  log=$1

  last_pause_line="$(
    grep pause $log \
      | tail -n 1 \
      | sed -E 's/[][0-9:]+ //'
  )"
  case "${last_pause_line}" in
    'Sim paused')
      # The server is up, but no one is playing.
      return 0
      ;;
    '')
      # The server is not up.
      return 0
      ;;
    'Sim unpaused')
      # The server is up and people are playing.
      return 1
      ;;
    *)
      # Unknown state.
      return 2
      ;;
  esac
}


servers_are_paused() {
  for log in /var/log/dst-*; do
    if ! server_is_paused $log; then
      warn "Server not paused -- log file:  $log"
      return 1
    fi
  done
}


main
